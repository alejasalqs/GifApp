{"version":3,"sources":["components/AddCategory.js","Helpers/getGifts.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","alert","type","value","onChange","target","getGifts","category","a","URL","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","url","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","useFetchGifts","gift","key","GiftExperApp","ReactDOM","render","document","getElementById"],"mappings":"wLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAqB9C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,QAAU,GAC5BR,GAAc,SAAAS,GAAU,MAAI,CAACP,MAC7BC,EAAc,KAEbO,MAAM,gCAMN,2BACIC,KAAK,OACLC,MAAOV,EACPW,SArBc,SAAER,GACxBF,EAAcE,EAAES,OAAOF,Y,uBCRlBG,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAOF,GAFN,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAGFC,EAAQD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAVtB,kBAebL,GAfa,4CAAH,sDCCRQ,EAAe,SAAC,GAAwB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEvC,OACI,yBAAKI,UAAU,0CACX,yBAAKC,IAAKL,EAAKM,IAAKP,IACpB,2BAAIA,KCHHQ,EAAW,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEff,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAoBzC,OAXEC,qBAAU,WAERzB,EAASC,GAAUyB,MAAK,SAAAjB,GAAK,OAAIe,EAAS,CACtChB,KAAMC,EACNa,SAAS,SAKjB,CAACrB,IAEMsB,EDfyBI,CAAc1B,GAAjCQ,EAJyB,EAI9BD,KAAYc,EAJkB,EAIlBA,QAEpB,OACI,oCACMA,GAAW,0CACb,0CAAgBrB,GAChB,yBAAKiB,UAAU,aAEPT,EAAMC,KAAI,SAAAkB,GAAI,OACV,kBAAC,EAAD,eACAC,IAAKD,EAAKhB,IACNgB,UEcbE,EA5BM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,YAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAUvB,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BACA,4BAEQS,EAAWgB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACA4B,IAAK5B,EACLA,SAAUA,UCnBlC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.e38ee68e.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState(''); // Estado inicial\n\n    // Esta función se ejcuta cuando escribimos\n    const handleInputChange = ( e ) => {\n        setInputValue(e.target.value)\n    }\n\n    // esta función se ejcuta al presionar enter en el input\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Llamamos la referencia de la funcion que esta en el otro componente\n        if(inputValue.trim().length >= 2) {\n           setCategories(categories => [inputValue]);\n           setInputValue('');\n        } else {\n            alert('This is not a valid search');\n        }\n    } \n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\" \n                value={inputValue}\n                onChange={handleInputChange}\n            ></input>\n        </form>\n    )\n}\n\n// Props obligatorios\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\nexport const getGifts = async ( category ) => {\n    const URL = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=20&api_key=4JMhqrDhPofDDDQv1VAT2W0N3OPxC29v`;\n    const resp = await fetch( URL );\n    const { data } = await resp.json();\n\n    // Se filtran los datos que se necesitan para mostrar\n    const gifts = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }        \n    })\n\n    //console.log(gifts);\n    return gifts;\n}\n","import React from 'react'\n\nexport const GiftGridItem = ( { id, title, url} ) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifts } from '../hooks/useFetchGifts';\nimport { GiftGridItem } from './GiftGridItem';\n\nexport const GiftGrid = ({ category }) => {\n\n    // La lógica para obtener las imagenes esta en este custom hook\n    // Se renombra la varibale data por gifts\n    const { data:gifts, loading } = useFetchGifts(category);\n\n    return (\n        <>\n            { loading && <h1>Loading...</h1>}\n            <h3>Searching: {category}</h3>\n            <div className=\"card-grid\">\n                {\n                    gifts.map(gift => (\n                        <GiftGridItem \n                        key={gift.id} \n                        {...gift} />))\n                }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifts } from '../Helpers/getGifts';\n\nexport const useFetchGifts = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n      // Los efectos no pueden ser async\n      // Nos ayuda a ejecutar código de manera condicional\n      useEffect(() => {\n        // Primer argumento, funcion que vamos a ejecutar\n        getGifts(category).then(gifts => setState({\n            data: gifts,\n            loading: false\n        }));\n    }, \n    // Segundo argumento, Si se envía vacío solo se ejecuta la primera vez que se renderiza el componente\n    // Si se añade algo al arreglo significa que se ejecuta si la condicion se cumple\n    [category]);\n    \n    return state;\n}","import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\nimport { AddCategory } from './components/AddCategory';\nimport { GiftGrid } from './components/GiftGrid';\n\nconst GiftExperApp = () => {\n\n    const [categories, setCategories] = useState(['Pokemon']); // Estado inicial\n\n    //const handleAdd = () => {\n        // SetCategories le cae encima al estado anterior\n        // Por eso es necesario mantener el anterior y agregar lo nuevo\n        //setCategories([...categories, 'Nueva serie']);\n    //}\n\n    return (\n        <>\n            <h2>Gif Expert App</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <br />\n            <ol>\n                {\n                    categories.map(category => (\n                        <GiftGrid\n                        key={category} \n                        category={category} />\n                    ))\n                }\n            </ol>\n        </>\n    );\n}\n\nexport default GiftExperApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExperApp from './GifExpertApp'\n\n\nReactDOM.render(\n    <GiftExperApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}